{"version":3,"sources":["Components/survey.jsx","App.js","serviceWorker.js","index.js"],"names":["Survey","id","class","for","className","type","placeholder","required","max","min","value","name","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f4ec07d0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\n\nclass Survey extends Component {\n    // state = {  }\n    render() { \n        const desc = \"Thank you for taking the time to fill out this survey.\"\n        return (\n            <div id=\"survey-page\">\n                <section id=\"welcome\">\n                    <h1 \n                        id=\"title\">\n                        freeCodeCamp Survey Form\n                    </h1>\n                    <p id=\"description\">\n                        {desc}\n                    </p>\n                </section>\n\n                <section id=\"form-section\">\n                    <form id=\"survey-form\">\n                        <div class=\"basic-info\">\n                            <label for=\"name\" id=\"name-label\" className=\"input-desc\">Name</label><br/>\n                            <input\n                                type=\"text\"\n                                id=\"name\"\n                                placeholder=\"Enter name\"\n                                required/>\n                        </div>\n\n                        <div class=\"basic-info\">\n                            <label for=\"email\" id=\"email-label\" className=\"input-desc\">Email</label><br/>\n                            <input \n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Enter email\"\n                                required/>\n                        </div>\n                        \n                        <div class=\"basic-info\">\n                            <label for=\"age\" id=\"number-label\" className=\"input-desc\">Age <small>(Optional)</small> </label><br/>\n                            <input\n                                type=\"number\"\n                                id=\"number\"\n                                placeholder=\"Age\"\n                                max=\"110\"\n                                min=\"13\"\n                                />\n                        </div>\n                        \n                        <div class=\"basic-info\">\n                            <label id=\"dropdown-label\">Which option best describes your current role?</label><br/>\n                            <select id=\"dropdown\">\n                                    <option value=\"Student\">Student</option>\n                                    <option value=\"Full Time Job\">Full Time Job</option>\n                                    <option value=\"Full Time Learner\">Full Time Learner</option>\n                                    <option value=\"Prefer not to say\">Prefer not to say</option>\n                                    <option value=\"Full Time Parent\">Full Time Parent</option>\n                                    <option value=\"Full Time Kid\">Full Time Kid</option>\n                                    <option value=\"Other\">Other</option>\n                            </select>\n                        </div>\n\n                        <div id=\"btns\" className=\"basic-info\">\n                            <div id=\"radio\">\n                                <label id=\"rec\">Would you reccommend freeCodeCamp to a friend?</label><br/>\n                                <input type=\"radio\" name=\"raiod-btn\" value=\"Burning_Man\"/>\n                                <label id=\"Definitely\" for=\"Definitely\" className=\"btn-text\">Definitely</label>\n                                <br/>\n                                <input type=\"radio\" name=\"raiod-btn\" value=\"EDC_Las_Vegas\"/>\n                                <label id=\"EDC_Las_Vegas\" name=\"EDC_Las_Vegas\" className=\"btn-text\">Maybe</label>\n                                <br/>\n                                <input type=\"radio\" name=\"raiod-btn\" value=\"Ultra\"/>\n                                <label id=\"Ultra\" name=\"radio-btn\" className=\"btn-text\">Not sure</label>\n                            </div>\n                        </div>\n\n                        <div class=\"basic-info\">\n                            <label id=\"feature\">What is your favorite feature of freeCodeCamp?</label><br/>\n                            <select id=\"dropdown\" placeholder=\"Select an option\">\n                                {/* <div> */}\n                                    <option value=\"Student\">Challenges</option>\n                                    <option value=\"Full Time Job\">Projects</option>\n                                    <option value=\"Full Time Learner\">Community</option>\n                                    <option value=\"Prefer not to say\">Open Source</option>\n                            </select>\n                            {/* <br/> */}\n                        </div>\n\n\n                        <div id=\"btns\" class=\"basic-info\">\n                            <div id=\"djs\">\n                                <label  id=\"improved\">What would you like to see improved? <small>(check all that apply)</small></label><br/>\n                                <input type=\"checkbox\" name=\"Deadmau5\" value=\"Deadmau5\"/>\n                                <label for=\"Deadmau5\" className=\"btn-text\">Front-end Projects</label><br/>\n                                <input type=\"checkbox\" name=\"W&W\" value=\"W&W\"/>\n                                <label for=\"W&W\" className=\"btn-text\">Back-end Projects</label><br/>\n                                <input type=\"checkbox\" name=\"RUFUS DU SOL\" value=\"RUFUS DU SOL\"/>\n                                <label for=\"RUFUS DU SOL\" className=\"btn-text\">Data Visualization</label><br/>\n                                <input type=\"checkbox\" name=\"Kygo\" value=\"Kygo\"/>\n                                <label for=\"Kygo\" className=\"btn-text\">Challenges</label><br/>\n                                <input type=\"checkbox\" name=\"Jauz\" value=\"Jauz\"/>\n                                <label for=\"Jauz\" className=\"btn-text\">Open Source Community</label><br/>\n                                <input type=\"checkbox\" name=\"Seven Lions\" value=\"Seven Lions\"/>\n                                <label for=\"Seven Lions\" className=\"btn-text\">Gitter help rooms</label><br/>\n                                <input type=\"checkbox\" name=\"Seven Lions\" value=\"Seven Lions\"/>\n                                <label for=\"Seven Lions\" className=\"btn-text\">Videos</label><br/>\n                                <input type=\"checkbox\" name=\"Seven Lions\" value=\"Seven Lions\"/>\n                                <label for=\"Seven Lions\" className=\"btn-text\">City Meetups</label><br/>\n                                <input type=\"checkbox\" name=\"Seven Lions\" value=\"Seven Lions\"/>\n                                <label for=\"Seven Lions\" className=\"btn-text\">Wiki</label><br/>\n                                <input type=\"checkbox\" name=\"Seven Lions\" value=\"Seven Lions\"/>\n                                <label for=\"Seven Lions\" className=\"btn-text\">Forum</label><br/>\n                                <input type=\"checkbox\" name=\"Seven Lions\" value=\"Seven Lions\"/>\n                                <label for=\"Seven Lions\" className=\"btn-text\">Additional Courses</label><br/>\n                            </div>\n                        </div>\n                        <div class=\"basic-info\">\n                            <p id=\"comments\">Any Comments or Suggestions</p>\n                            <textarea placeholder=\"Enter comments here\"></textarea>\n                            <button type=\"submit\" id=\"submit\">Submit</button>\n                        </div>\n                    </form>\n                </section>\n            </div>\n        );\n    }\n}\n \nexport default Survey;","import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\nimport Survey from './Components/survey'\n\nfunction App() {\n  return (\n    <div>\n      <Survey/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}